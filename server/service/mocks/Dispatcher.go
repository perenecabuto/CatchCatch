// Code generated by mockery v1.0.0
package mocks

import context "context"
import messages "github.com/perenecabuto/CatchCatch/server/service/messages"
import mock "github.com/stretchr/testify/mock"

// Dispatcher is an autogenerated mock type for the Dispatcher type
type Dispatcher struct {
	mock.Mock
}

// Publish provides a mock function with given fields: topic, message
func (_m *Dispatcher) Publish(topic string, message []byte) error {
	ret := _m.Called(topic, message)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, []byte) error); ok {
		r0 = rf(topic, message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Subscribe provides a mock function with given fields: ctx, topic, callback
func (_m *Dispatcher) Subscribe(ctx context.Context, topic string, callback messages.OnMessage) error {
	ret := _m.Called(ctx, topic, callback)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, messages.OnMessage) error); ok {
		r0 = rf(ctx, topic, callback)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
